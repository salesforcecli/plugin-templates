{
  "name": "@salesforce/plugin-templates",
  "description": "Commands to create metadata from a default or custom template",
  "version": "55.4.1",
  "main": "lib/index.js",
  "author": "Salesforce",
  "bugs": "https://github.com/salesforcecli/plugin-templates/issues",
  "dependencies": {
    "@oclif/core": "^2.0.10",
    "@salesforce/core": "^3.33.1",
    "@salesforce/sf-plugins-core": "^2.0.2",
    "@salesforce/templates": "^57.1.1",
    "tslib": "^2",
    "yeoman-environment": "^3.13.0",
    "yeoman-generator": "^5.7.0"
  },
  "devDependencies": {
    "@oclif/plugin-command-snapshot": "^3.2.11",
    "@oclif/plugin-help": "^5.2.4",
    "@salesforce/cli-plugins-testkit": "^3.2.20",
    "@salesforce/dev-config": "^3.1.0",
    "@salesforce/dev-scripts": "^3.1.1",
    "@salesforce/plugin-command-reference": "^2.3.0",
    "@salesforce/plugin-settings": "^1.2.0",
    "@salesforce/prettier-config": "^0.0.2",
    "@salesforce/ts-sinon": "^1.2.2",
    "@swc/core": "^1.3.27",
    "@types/mkdirp": "^0.5.2",
    "@types/yeoman-assert": "^3.1.1",
    "@types/yeoman-generator": "^5.2.11",
    "@typescript-eslint/eslint-plugin": "^5.33.0",
    "@typescript-eslint/parser": "^5.51.0",
    "chai": "^4.3.7",
    "commitizen": "^4.3.0",
    "eslint": "^8.34.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-config-salesforce": "^1.1.0",
    "eslint-config-salesforce-license": "^0.1.6",
    "eslint-config-salesforce-typescript": "^1.1.1",
    "eslint-plugin-header": "^3.0.0",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-jsdoc": "^39.6.6",
    "eslint-plugin-sf-plugin": "^1.8.1",
    "husky": "^7.0.4",
    "mocha": "^9.1.3",
    "nyc": "^15.1.0",
    "oclif": "^3.6.1",
    "prettier": "^2.8.3",
    "pretty-quick": "^3.1.0",
    "shx": "^0.3.4",
    "sinon": "10.0.0",
    "ts-node": "^10.0.0",
    "typescript": "^4.9.5",
    "wireit": "^0.9.3",
    "yeoman-assert": "^3.1.1",
    "yeoman-test": "^6.3.0"
  },
  "resolutions": {
    "yeoman-generator": "^5.6.1",
    "@types/yeoman-generator": "^5.2.9"
  },
  "homepage": "https://github.com/salesforcecli/plugin-templates",
  "keywords": [
    "force",
    "salesforce",
    "sfdx",
    "salesforcecli",
    "sfdx-plugin",
    "sf-plugin",
    "templates",
    "sf"
  ],
  "license": "BSD-3-Clause",
  "files": [
    "yarn.lock",
    "/bin",
    "/lib",
    "/messages",
    "/npm-shrinkwrap.json",
    "/oclif.manifest.json"
  ],
  "oclif": {
    "commands": "./lib/commands",
    "additionalHelpFlags": [
      "-h"
    ],
    "bin": "sfdx",
    "devPlugins": [
      "@oclif/plugin-help",
      "@oclif/plugin-command-snapshot",
      "@salesforce/plugin-command-reference",
      "@salesforce/plugin-settings"
    ],
    "topics": {
      "apex": {
        "external": true,
        "description": "Work with Apex classes and triggers.",
        "subtopics": {
          "generate": {
            "description": "Create an apex class or trigger."
          }
        }
      },
      "analytics": {
        "external": true,
        "description": "Work with analytics assets.",
        "subtopics": {
          "generate": {
            "description": "Create analytics templates."
          }
        }
      },
      "lightning": {
        "description": "Work with Lightning Web and Aura components.",
        "external": true,
        "subtopics": {
          "generate": {
            "description": "Create LWC and Aura components and associated metadata."
          }
        }
      },
      "project": {
        "description": "Work with projects."
      },
      "visualforce": {
        "description": "Work with Visualforce components.",
        "subtopics": {
          "generate": {
            "description": "Create a Visualforce page or component."
          }
        }
      },
      "static-resource": {
        "description": "Work with static resources."
      }
    }
  },
  "engines": {
    "node": ">=14.0.0"
  },
  "repository": "salesforcecli/plugin-templates",
  "scripts": {
    "build": "sf-build",
    "clean": "sf-clean",
    "clean-all": "sf-clean all",
    "clean:lib": "shx rm -rf lib && shx rm -rf coverage && shx rm -rf .nyc_output && shx rm -f oclif.manifest.json",
    "compile": "sf-compile",
    "docs": "sf-docs",
    "format": "sf-format",
    "lint": "sf-lint",
    "lint:fix": "eslint 'src/**/*.ts' 'test/**/*.ts'  --fix",
    "manifest:generate": "oclif manifest",
    "manifest:remove": "shx rm -f oclif.manifest.json",
    "postpack": "shx rm -f oclif.manifest.json",
    "prepack": "sf-prepack",
    "prepare": "sf-install",
    "pretest": "sf-compile-test",
    "test": "sf-test",
    "test:command-reference": "wireit",
    "test:compile": "wireit",
    "test:deprecation-policy": "wireit",
    "test:json-schema": "wireit",
    "test:nuts": "wireit",
    "test:only": "wireit",
    "version": "oclif readme"
  },
  "wireit": {
    "build": {
      "dependencies": [
        "compile",
        "lint"
      ]
    },
    "compile": {
      "command": "tsc -p . --pretty --incremental",
      "files": [
        "src/**/*.ts",
        "tsconfig.json",
        "messages/**"
      ],
      "output": [
        "lib/**",
        "*.tsbuildinfo"
      ],
      "clean": "if-file-deleted"
    },
    "format": {
      "command": "prettier --write \"+(src|test|schemas)/**/*.+(ts|js|json)|command-snapshot.json\""
    },
    "lint": {
      "command": "eslint src test --color --cache --cache-location .eslintcache",
      "files": [
        "src/**/*.ts",
        "test/**/*.ts",
        "messages/**",
        ".eslintignore",
        ".eslintrc.js"
      ],
      "output": []
    },
    "test:compile": {
      "command": "tsc -p \"./test\" --pretty",
      "files": [
        "test/**/*.ts",
        "tsconfig.json",
        "test/tsconfig.json"
      ],
      "output": []
    },
    "test": {
      "dependencies": [
        "test:compile",
        "test:only",
        "test:command-reference",
        "test:deprecation-policy",
        "lint",
        "test:json-schema"
      ]
    },
    "test:nuts": {
      "command": "nyc mocha \"test/**/*.nut.ts\" --parallel --jobs 30 --timeout 5000000 ",
      "files": [
        "test/**/*.nut.ts",
        "src/**/*.ts",
        "messages",
        "tsconfig.json",
        "test/tsconfig.json"
      ],
      "output": []
    },
    "test:only": {
      "command": "nyc mocha \"test/**/*.test.ts\"",
      "files": [
        "test/**/*.ts",
        "src/**/*.ts",
        "tsconfig.json",
        "test/tsconfig.json"
      ],
      "output": []
    },
    "test:command-reference": {
      "command": "\"./bin/dev\" commandreference:generate --erroronwarnings",
      "files": [
        "src/**/*.ts",
        "messages/**"
      ],
      "output": [
        "tmp/root"
      ]
    },
    "test:deprecation-policy": {
      "command": "\"./bin/dev\" snapshot:compare",
      "files": [
        "src/**/*.ts"
      ],
      "output": [],
      "dependencies": [
        "compile"
      ]
    },
    "test:json-schema": {
      "command": "\"./bin/dev\" schema:compare",
      "files": [
        "src/**/*.ts",
        "schemas"
      ],
      "output": []
    }
  }
}
